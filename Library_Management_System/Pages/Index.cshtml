@page
@model IndexModel
@{
    Layout = null;
}

<link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap.min.css" />
<style>
    .login-container {
        display: flex;
        justify-content: center;
        align-items: center;
        height: 100vh;
    }
    #loginForm {
        height: 300px;
        width: 400px;
        background-color: lightblue;
        border-radius: 5px;
    }
</style>

<div class="login-container">
    <div class="text-center mx-auto">
        <h1>Login</h1>
        <div class="col-md-6" id="loginForm">
            <div class="container">
                <label for="username">Username:</label>
                <input class="form-control" type="text" id="username" name="username" required><br><br>

                <label for="password">Password:</label>
                <input class="form-control" type="password" id="password" name="password" required><br><br>

                <button class="btn btn-success" id="login_btn" type="submit">Login</button>
                <a class="btn btn-success" id="register_btn" href="/User/Register">Register Here</a>
                <a style="margin-top:5px;" class="btn btn-success" id="register_btn" href="/User/Register_Admin">Register Here as Admin</a>
            </div>
        </div>
    </div>
</div>

<script src="~/lib/jquery/dist/jquery.min.js"></script>
<script src="~/lib/bootstrap/dist/js/bootstrap.bundle.min.js"></script>
<script>
    $(document).ready(function () {
        $('#login_btn').on('click', function (event) {
            event.preventDefault();
            var model = {
                Username: $("#username").val(),
                Password: $("#password").val()
            };

            console.log(model); 

            $.ajax({
                type: 'POST',
                url: 'https://localhost:7227/login',
                contentType: 'application/json',
                data: JSON.stringify(model),
                success: function (response) {
                    var token = response.token;
                    var decodedToken = parseJwt(token);
                    var isAdmin = decodedToken && decodedToken["http://schemas.microsoft.com/ws/2008/06/identity/claims/role"] === "Admin";

                    alert('Login successful.');
                    if (isAdmin) {
                        window.location.href = '/Library/Home';
                    } else {
                        $('nav').addClass('hidden-navbar');
                        window.location.href = '/Member/Member_View';
                    }
                },
                error: function (xhr, status, error) {
                    console.error(xhr.responseText);
                    alert('Login failed. Please check your credentials and try again.');
                }
            });
        });
    });
    function parseJwt(token) {
        var base64Url = token.split('.')[1];
        var base64 = base64Url.replace(/-/g, '+').replace(/_/g, '/');
        var jsonPayload = decodeURIComponent(atob(base64).split('').map(function (c) {
            return '%' + ('00' + c.charCodeAt(0).toString(16)).slice(-2);
        }).join(''));

        return JSON.parse(jsonPayload);
    }


</script>
